openapi: 3.0.3
info:
  title: API REST para Recetas
  version: 0.0.1
  description: API REST para gestionar recetas, categorías y usuarios
servers:
  - url: 127.0.0.1:3000/api/v1
paths:
  /recetas:
    get:
      summary: Obtener todas las recetas
      description: Obtener todas las recetas
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recetas'
    post:
      summary: Crear nueva receta
      description: Crear nueva receta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/receta'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nuevoElemento'
        "4XX":
          description: Los parámetros proporcionados son incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /recetas/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Obtener información de una receta específica
      description: Obtener información de una receta específica
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/receta'
        "404":
          description: No existe la receta con ese ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
    put:
      summary: Modificar información de una receta específica
      description: Modificar información de una receta específica
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/receta_actualizar'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nuevoElemento'
        "4XX":
          description: Los parámetros proporcionados son incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
    delete:
      summary: Eliminar una receta
      description: Eliminar una receta
      responses:
        "200":
          description: OK
        "4XX":
          description: Los parámetros proporcionados son incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /recetas/{id}/reviews:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Obtener todas las reseñas de una receta
      description: Obtener todas las reseñas de una receta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reviews'
    post:
      summary: Crear nueva reseña para una receta
      description: Crear nueva reseña para una receta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/review'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nuevoElemento'
        "4XX":
          description: Los parámetros proporcionados son incorrectos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /categorias:
    get:
      summary: Ver todas las categorías
      description: Ver todas las categorías
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categorias'
  /categorias/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Obtener información de una categoría específica
      description: Obtener información de una categoría específica
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoria'
        "404":
          description: No existe la categoría con ese ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /categorias/{id}/recetas:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Obtener todas las recetas de una categoría específica
      description: Obtener todas las recetas de una categoría específica
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recetas'
  /categorias/{id}/recetas/{idReceta}:
    parameters:
      - $ref: '#/components/parameters/id'
      - name: idReceta
        in: path
        required: true
        schema:
          type: integer
          minimum: 1
          example: 39
    get:
      summary: Obtener una receta específica dentro de una categoría específica
      description: Obtener una receta específica dentro de una categoría específica
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/receta'
        "404":
          description: No existe la receta o la categoría con ese ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /usuarios:
    get:
      summary: Ver todos los usuarios
      description: Ver todos los usuarios
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuarios'
  /usuarios/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Obtener información de un usuario específico
      description: Obtener información de un usuario específico
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuario'
        "404":
          description: No existe el usuario con ese ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
  /usuarios/{id}/recetas:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Obtener todas las recetas de un usuario específico
      description: Obtener todas las recetas de un usuario específico
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recetas'
components:
  parameters:
    id:
      description: id de una receta, categoría, usuario o reseña
      name: id
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
        example: 123
  schemas:
    recetas:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/receta'
        next:
          anyOf:
            - type: string
            - type: "null"
          description: ID de la receta para poder seguir la búsqueda usando paginación
      required:
        - results
        - next
    receta_actualizar:
      type: object
      properties:
        Name:
          type: string
        Time:
          type: string
        Category:
          type: string
        Ingredients:
          type: string
        Rating:
          type: integer
          minimum: 1
          maximum: 5
        Instructions:
          type: string
      example: {
        "Time": "4H25M"
      }
    receta:
      allOf:
        - required:
            - Name
            - user_id
            - user
            - Time
            - Category
            - Ingredients
            - Instructions
        - $ref: '#/components/schemas/receta_actualizar'
      additionalProperties: true
      example: {
        "Name": "Biryani",
        "user_id": 1567,
        "user": "elly9812",
        "Time": "4H25M",
        "Category": "Chicken",
        "Ingredients": "saffron, milk, hot green chili peppers, onions, garlic, clove, pepper",
        "Rating": 3,
        "Instructions": "Soak saffron in warm milk for 5 minutes and puree in blender.Add chile"
      }
    reviews:
      type: array
      items:
        $ref: '#/components/schemas/review'
      example: [{
        "recipe_id": 39,
        "user_id": 1530,
        "user": "Carole Reu",
        "Rating": 5,
        "Review": "better than any you can get at a restaurant!"
      }]
    review:
      type: object
      properties:
        recipe_id:
          type: integer
        user_id:
          type: integer
        user:
          type: string
        Rating:
          type: integer
          minimum: 1
          maximum: 5
        Review:
          type: string
      required:
        - recipe_id
        - user_id
        - user
        - Rating
        - Review
      example: {
        "recipe_id": 39,
        "user_id": 1530,
        "user": "Carole Reu",
        "Rating": 5,
        "Review": "better than any you can get at a restaurant!"
      }
    categorias:
      type: array
      items:
        $ref: '#/components/schemas/categoria'
      example: [{
        "_id": 1,
        "category": "Dessert"
      }]
    categoria:
      type: object
      properties:
        _id:
          type: integer
        category:
          type: string
      required:
        - _id
        - category
      example: {
        "_id": 1,
        "category": "Dessert"
      }
    usuarios:
      type: array
      items:
        $ref: '#/components/schemas/usuario'
      example: [{
        "_id": 1530,
        "AuthorName": "Carole Reu"
      }]
    usuario:
      type: object
      properties:
        _id:
          type: integer
        AuthorName:
          type: string
      required:
        - _id
        - AuthorName
      example: {
        "_id": 1530,
        "AuthorName": "Carole Reu"
      }
    errorMessage:
      type: object
      properties:
        error:
          type: string
          enum: ["Faltan parámetros", "ID Inválido"]
        mensaje:
          type: string
      required:
        - error
        - mensaje
      additionalProperties: false
      example: {
        "error": "faltan parámetros",
        "mensaje": "Faltan los parámetros P1 y P2"
      }
    nuevoElemento:
      type: object
      properties:
        id:
          type: integer
        url:
          description: Enlace a la receta, categoría o usuario creado
          type: string
          format: uri
      example: {
        "id": 123,
        "url": "http://example.com/api/v1/recetas/123"
      }
